{"ast":null,"code":"// operational ranges\nconst sunlight_analog_min = 255; // 255 is room light\nconst sunlight_analog_max = 6; // 6 is direct sunlight\nconst moisture_analog_dry = 230; // 230 is 100% dry\nconst moisture_analog_wet = 190; // 200 is 100% wet\nconst reservoir_analog_full = 130; // 120 is 100% full\nconst reservoir_analog_minimum = 40; // 40 is barely enough to water\nconst reservoir_analog_empty = 0; // 0 is 100% empty\nconst reservoir_analog_70 = 100;\nconst reservoir_analog_50 = 100;\nconst reservoir_analog_30 = 80;\nconst reservoir_analog_20 = 70;\nexport function SunlightFormat(input) {\n  // to prevent rogue readings\n  if (input < 6) {\n    input = 255;\n  }\n  var output = Math.abs(input - sunlight_analog_min) / (sunlight_analog_min - sunlight_analog_max);\n  if (output > 1) {\n    output = 1;\n  }\n  return (output * 100).toFixed(0);\n}\n_c = SunlightFormat;\nexport function MoistureFormat(input) {\n  // to prevent rogue readings\n  if (input < 190) {\n    input = 233;\n  }\n  var output = Math.abs(input - moisture_analog_dry) / (moisture_analog_dry - moisture_analog_wet);\n  if (output > 1) {\n    output = 1;\n  }\n  return (output * 100).toFixed(0);\n}\n_c2 = MoistureFormat;\nexport function MoistureFormat2(input) {\n  var output = (moisture_analog_dry - moisture_analog_wet) * (input / 100);\n  return moisture_analog_dry - output;\n}\n\n// 120 is 100% full and 0 is 100% empty\n_c3 = MoistureFormat2;\nexport function ReservoirFormat(input) {\n  if (input < reservoir_analog_minimum) {\n    return 0;\n  }\n  return ((input - reservoir_analog_minimum) / reservoir_analog_full * 100).toFixed(0);\n}\n_c4 = ReservoirFormat;\nexport const chart_data_url = \"http://192.168.68.64:8088/getalldata\";\nexport const live_data_url = \"http://192.168.68.64:8089/\";\nexport const watering_url = \"http://192.168.68.64:8087/\";\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SunlightFormat\");\n$RefreshReg$(_c2, \"MoistureFormat\");\n$RefreshReg$(_c3, \"MoistureFormat2\");\n$RefreshReg$(_c4, \"ReservoirFormat\");","map":{"version":3,"names":["sunlight_analog_min","sunlight_analog_max","moisture_analog_dry","moisture_analog_wet","reservoir_analog_full","reservoir_analog_minimum","reservoir_analog_empty","reservoir_analog_70","reservoir_analog_50","reservoir_analog_30","reservoir_analog_20","SunlightFormat","input","output","Math","abs","toFixed","_c","MoistureFormat","_c2","MoistureFormat2","_c3","ReservoirFormat","_c4","chart_data_url","live_data_url","watering_url","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/Constants.js"],"sourcesContent":["// operational ranges\r\nconst sunlight_analog_min = 255 // 255 is room light\r\nconst sunlight_analog_max = 6 // 6 is direct sunlight\r\nconst moisture_analog_dry = 230 // 230 is 100% dry\r\nconst moisture_analog_wet = 190 // 200 is 100% wet\r\nconst reservoir_analog_full = 130 // 120 is 100% full\r\nconst reservoir_analog_minimum = 40 // 40 is barely enough to water\r\nconst reservoir_analog_empty = 0 // 0 is 100% empty\r\nconst reservoir_analog_70 = 100 \r\nconst reservoir_analog_50 = 100 \r\nconst reservoir_analog_30 = 80\r\nconst reservoir_analog_20 = 70 \r\nexport function SunlightFormat(input) {\r\n\r\n    // to prevent rogue readings\r\n    if (input < 6) {\r\n        input = 255\r\n    }\r\n\r\n    var output = (Math.abs(input - sunlight_analog_min)) / (sunlight_analog_min-sunlight_analog_max)\r\n    if (output > 1) {\r\n        output = 1\r\n    } \r\n    return (output * 100).toFixed(0);\r\n}\r\n\r\nexport function MoistureFormat(input) {\r\n    // to prevent rogue readings\r\n    if (input < 190) {\r\n        input = 233\r\n    }\r\n    var output = (Math.abs(input - moisture_analog_dry)) / (moisture_analog_dry-moisture_analog_wet)\r\n    if (output > 1) {\r\n        output = 1\r\n    }\r\n    return (output * 100).toFixed(0);\r\n}\r\n\r\nexport function MoistureFormat2(input) {\r\n\r\n    var output = (moisture_analog_dry-moisture_analog_wet)*(input / 100)\r\n\r\n    return (moisture_analog_dry - output)\r\n}\r\n\r\n// 120 is 100% full and 0 is 100% empty\r\nexport function ReservoirFormat(input) {\r\n    if (input < reservoir_analog_minimum) {\r\n        return 0;\r\n    }\r\n    return (((input-reservoir_analog_minimum)/reservoir_analog_full) * 100).toFixed(0);\r\n}\r\n\r\nexport const chart_data_url = \"http://192.168.68.64:8088/getalldata\"\r\nexport const live_data_url = \"http://192.168.68.64:8089/\"\r\nexport const watering_url = \"http://192.168.68.64:8087/\""],"mappings":"AAAA;AACA,MAAMA,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,mBAAmB,GAAG,CAAC,EAAC;AAC9B,MAAMC,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,qBAAqB,GAAG,GAAG,EAAC;AAClC,MAAMC,wBAAwB,GAAG,EAAE,EAAC;AACpC,MAAMC,sBAAsB,GAAG,CAAC,EAAC;AACjC,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,mBAAmB,GAAG,EAAE;AAC9B,MAAMC,mBAAmB,GAAG,EAAE;AAC9B,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAElC;EACA,IAAIA,KAAK,GAAG,CAAC,EAAE;IACXA,KAAK,GAAG,GAAG;EACf;EAEA,IAAIC,MAAM,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGZ,mBAAmB,CAAC,IAAKA,mBAAmB,GAACC,mBAAmB,CAAC;EAChG,IAAIY,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AAACC,EAAA,GAZeN,cAAc;AAc9B,OAAO,SAASO,cAAcA,CAACN,KAAK,EAAE;EAClC;EACA,IAAIA,KAAK,GAAG,GAAG,EAAE;IACbA,KAAK,GAAG,GAAG;EACf;EACA,IAAIC,MAAM,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGV,mBAAmB,CAAC,IAAKA,mBAAmB,GAACC,mBAAmB,CAAC;EAChG,IAAIU,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AAACG,GAAA,GAVeD,cAAc;AAY9B,OAAO,SAASE,eAAeA,CAACR,KAAK,EAAE;EAEnC,IAAIC,MAAM,GAAG,CAACX,mBAAmB,GAACC,mBAAmB,KAAGS,KAAK,GAAG,GAAG,CAAC;EAEpE,OAAQV,mBAAmB,GAAGW,MAAM;AACxC;;AAEA;AAAAQ,GAAA,GAPgBD,eAAe;AAQ/B,OAAO,SAASE,eAAeA,CAACV,KAAK,EAAE;EACnC,IAAIA,KAAK,GAAGP,wBAAwB,EAAE;IAClC,OAAO,CAAC;EACZ;EACA,OAAO,CAAE,CAACO,KAAK,GAACP,wBAAwB,IAAED,qBAAqB,GAAI,GAAG,EAAEY,OAAO,CAAC,CAAC,CAAC;AACtF;AAACO,GAAA,GALeD,eAAe;AAO/B,OAAO,MAAME,cAAc,GAAG,sCAAsC;AACpE,OAAO,MAAMC,aAAa,GAAG,4BAA4B;AACzD,OAAO,MAAMC,YAAY,GAAG,4BAA4B;AAAA,IAAAT,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAI,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
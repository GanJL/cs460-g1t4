{"ast":null,"code":"// operational ranges\nconst sunlight_analog_min = 255;\nconst sunlight_analog_max = 6;\nconst moisture_analog_dry = 230;\nconst moisture_analog_damp = 200;\nconst moisture_analog_wet = 180;\nconst moisture_reference = moisture_analog_dry - (moisture_analog_dry - moisture_analog_wet) / 4;\nconst reservoir_analog_full = 125;\n// const reservoir_analog_70 = 110 \n// const reservoir_analog_50 = 100 \n// const reservoir_analog_30 = 80\n// const reservoir_analog_20 = 70 \nconst reservoir_analog_min = 30;\nexport function SunlightFormat(input) {\n  // to prevent rogue readings\n  if (input < 6) {\n    input = 255;\n  } else if (input > 230) {\n    input = 255;\n  }\n  var output = Math.abs(input - sunlight_analog_min) / (sunlight_analog_min - sunlight_analog_max);\n  if (output > 1) {\n    output = 1;\n  }\n  return (output * 100).toFixed(0);\n}\n_c = SunlightFormat;\nexport function MoistureFormat(input) {\n  if (input > moisture_analog_dry) {\n    return 0;\n  } else if (input == 0) {\n    return 100;\n  }\n  var output = (moisture_analog_dry - input) / (moisture_analog_dry - moisture_analog_wet);\n  if (output > 1) {\n    output = 1;\n  }\n  if (output < 0) {\n    output = 0;\n  }\n  return (output * 100).toFixed(0);\n}\n_c2 = MoistureFormat;\nexport function MoistureFormat2(input) {\n  var output = (moisture_analog_dry - moisture_analog_wet) * (input / 100);\n  return moisture_analog_dry - output;\n}\n_c3 = MoistureFormat2;\nexport function ReservoirFormat(input) {\n  if (input < reservoir_analog_min) {\n    return 0;\n  } else if (input >= reservoir_analog_full) {\n    return 100;\n  } else {\n    return (input / reservoir_analog_full * 100).toFixed(0);\n  }\n}\n_c4 = ReservoirFormat;\nexport function ReservoirFormat2(input) {\n  return input / 100 * reservoir_analog_full;\n}\n_c5 = ReservoirFormat2;\nexport const chart_data_url = \"http://192.168.68.64:8088/getalldata\";\nexport const live_data_url = \"http://192.168.68.64:8089/\";\nexport const watering_url = \"http://192.168.68.64:8087/\";\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SunlightFormat\");\n$RefreshReg$(_c2, \"MoistureFormat\");\n$RefreshReg$(_c3, \"MoistureFormat2\");\n$RefreshReg$(_c4, \"ReservoirFormat\");\n$RefreshReg$(_c5, \"ReservoirFormat2\");","map":{"version":3,"names":["sunlight_analog_min","sunlight_analog_max","moisture_analog_dry","moisture_analog_damp","moisture_analog_wet","moisture_reference","reservoir_analog_full","reservoir_analog_min","SunlightFormat","input","output","Math","abs","toFixed","_c","MoistureFormat","_c2","MoistureFormat2","_c3","ReservoirFormat","_c4","ReservoirFormat2","_c5","chart_data_url","live_data_url","watering_url","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/Constants.js"],"sourcesContent":["// operational ranges\r\nconst sunlight_analog_min = 255\r\nconst sunlight_analog_max = 6 \r\n\r\nconst moisture_analog_dry = 230 \r\nconst moisture_analog_damp = 200\r\nconst moisture_analog_wet = 180 \r\nconst moisture_reference = moisture_analog_dry - (moisture_analog_dry - moisture_analog_wet)/4\r\n\r\nconst reservoir_analog_full = 125 \r\n// const reservoir_analog_70 = 110 \r\n// const reservoir_analog_50 = 100 \r\n// const reservoir_analog_30 = 80\r\n// const reservoir_analog_20 = 70 \r\nconst reservoir_analog_min = 30 \r\n\r\n\r\n\r\nexport function SunlightFormat(input) {\r\n    // to prevent rogue readings\r\n    if (input < 6) {\r\n        input = 255\r\n    }\r\n    else if (input > 230) {\r\n        input = 255\r\n    }\r\n\r\n    var output = (Math.abs(input - sunlight_analog_min)) / (sunlight_analog_min-sunlight_analog_max)\r\n    if (output > 1) {\r\n        output = 1\r\n    } \r\n    return (output * 100).toFixed(0);\r\n}\r\n\r\nexport function MoistureFormat(input) {\r\n\r\n    if (input > moisture_analog_dry) {\r\n        return 0;\r\n    }\r\n    else if (input == 0) {\r\n        return 100;\r\n    }\r\n\r\n    var output = (moisture_analog_dry - input) / (moisture_analog_dry-moisture_analog_wet)\r\n    if (output > 1) {\r\n        output = 1\r\n    }\r\n    if (output < 0) {\r\n        output = 0\r\n    }\r\n    return (output * 100).toFixed(0);\r\n}\r\n\r\nexport function MoistureFormat2(input) {\r\n\r\n    var output = (moisture_analog_dry-moisture_analog_wet)*(input / 100)\r\n\r\n    return (moisture_analog_dry - output)\r\n}\r\n\r\n\r\nexport function ReservoirFormat(input) {\r\n    if (input < reservoir_analog_min) {\r\n        return 0;\r\n    }\r\n    else if (input >= reservoir_analog_full) {\r\n        return 100;\r\n    }\r\n    else {\r\n        return ((input/(reservoir_analog_full)) * 100).toFixed(0);\r\n    }\r\n}\r\n\r\nexport function ReservoirFormat2(input) {\r\n    return input/100*(reservoir_analog_full)\r\n    \r\n}\r\n\r\n\r\nexport const chart_data_url = \"http://192.168.68.64:8088/getalldata\"\r\nexport const live_data_url = \"http://192.168.68.64:8089/\"\r\nexport const watering_url = \"http://192.168.68.64:8087/\""],"mappings":"AAAA;AACA,MAAMA,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,mBAAmB,GAAG,CAAC;AAE7B,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,kBAAkB,GAAGH,mBAAmB,GAAG,CAACA,mBAAmB,GAAGE,mBAAmB,IAAE,CAAC;AAE9F,MAAME,qBAAqB,GAAG,GAAG;AACjC;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,EAAE;AAI/B,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAClC;EACA,IAAIA,KAAK,GAAG,CAAC,EAAE;IACXA,KAAK,GAAG,GAAG;EACf,CAAC,MACI,IAAIA,KAAK,GAAG,GAAG,EAAE;IAClBA,KAAK,GAAG,GAAG;EACf;EAEA,IAAIC,MAAM,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGT,mBAAmB,CAAC,IAAKA,mBAAmB,GAACC,mBAAmB,CAAC;EAChG,IAAIS,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AAACC,EAAA,GAdeN,cAAc;AAgB9B,OAAO,SAASO,cAAcA,CAACN,KAAK,EAAE;EAElC,IAAIA,KAAK,GAAGP,mBAAmB,EAAE;IAC7B,OAAO,CAAC;EACZ,CAAC,MACI,IAAIO,KAAK,IAAI,CAAC,EAAE;IACjB,OAAO,GAAG;EACd;EAEA,IAAIC,MAAM,GAAG,CAACR,mBAAmB,GAAGO,KAAK,KAAKP,mBAAmB,GAACE,mBAAmB,CAAC;EACtF,IAAIM,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,IAAIA,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AAACG,GAAA,GAjBeD,cAAc;AAmB9B,OAAO,SAASE,eAAeA,CAACR,KAAK,EAAE;EAEnC,IAAIC,MAAM,GAAG,CAACR,mBAAmB,GAACE,mBAAmB,KAAGK,KAAK,GAAG,GAAG,CAAC;EAEpE,OAAQP,mBAAmB,GAAGQ,MAAM;AACxC;AAACQ,GAAA,GALeD,eAAe;AAQ/B,OAAO,SAASE,eAAeA,CAACV,KAAK,EAAE;EACnC,IAAIA,KAAK,GAAGF,oBAAoB,EAAE;IAC9B,OAAO,CAAC;EACZ,CAAC,MACI,IAAIE,KAAK,IAAIH,qBAAqB,EAAE;IACrC,OAAO,GAAG;EACd,CAAC,MACI;IACD,OAAO,CAAEG,KAAK,GAAEH,qBAAsB,GAAI,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAC;EAC7D;AACJ;AAACO,GAAA,GAVeD,eAAe;AAY/B,OAAO,SAASE,gBAAgBA,CAACZ,KAAK,EAAE;EACpC,OAAOA,KAAK,GAAC,GAAG,GAAEH,qBAAsB;AAE5C;AAACgB,GAAA,GAHeD,gBAAgB;AAMhC,OAAO,MAAME,cAAc,GAAG,sCAAsC;AACpE,OAAO,MAAMC,aAAa,GAAG,4BAA4B;AACzD,OAAO,MAAMC,YAAY,GAAG,4BAA4B;AAAA,IAAAX,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAI,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
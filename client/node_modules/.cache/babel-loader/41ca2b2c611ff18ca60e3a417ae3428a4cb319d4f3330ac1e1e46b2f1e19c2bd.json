{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganji\\\\Desktop\\\\cs460-smart-plant-system\\\\src\\\\components\\\\Charts\\\\LiveChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment/moment';\nimport 'chartjs-adapter-date-fns';\nimport ChartStreaming from 'chartjs-plugin-streaming';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale, ChartStreaming);\nconst LiveChart = props => {\n  _s();\n  const [labels, setLabels] = useState([]);\n  const [moisture, setMoisture] = useState([]);\n  const [sunlight, setSunlight] = useState([]);\n  const [load, setLoad] = useState(false);\n  const generateMinutes = () => {\n    const items = [];\n    new Array(24).fill().forEach((acc, index) => {\n      items.push(moment({\n        hour: index\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 15\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 30\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 45\n      }).format('h:mm A'));\n    });\n    return items;\n  };\n  const getData = data => {};\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    stacked: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Moisture Level vs Sunlight Level (30 Minutes)'\n      }\n    },\n    scales: {\n      x: {\n        type: 'realtime',\n        realtime\n      },\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        min: 0,\n        max: 100,\n        stepSize: 1\n      }\n    }\n  };\n  const chartdata = {\n    labels,\n    datasets: [{\n      label: 'Moisture Level %',\n      data: [1, 2, 3, 4, 5, 6, 4, 5],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      yAxisID: 'y'\n    }]\n  };\n  useEffect(() => {\n    setLabels(generateMinutes());\n    setLoad(true);\n    getData(props);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: load ? /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this);\n};\n_s(LiveChart, \"Vr4FhR1xSxkWE0TaE9gOWm0FcfI=\");\n_c = LiveChart;\nexport default LiveChart;\nvar _c;\n$RefreshReg$(_c, \"LiveChart\");","map":{"version":3,"names":["React","useEffect","useState","moment","ChartStreaming","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","register","LiveChart","props","_s","labels","setLabels","moisture","setMoisture","sunlight","setSunlight","load","setLoad","generateMinutes","items","Array","fill","forEach","acc","index","push","hour","format","minute","getData","data","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","x","type","realtime","y","position","min","max","stepSize","chartdata","datasets","label","borderColor","backgroundColor","yAxisID","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/components/Charts/LiveChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment/moment';\r\nimport 'chartjs-adapter-date-fns';\r\nimport ChartStreaming from 'chartjs-plugin-streaming';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    TimeScale\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n  ChartStreaming\r\n);\r\n\r\n\r\nconst LiveChart = (props) => {\r\n  const [labels, setLabels] = useState([]);\r\n  const [moisture, setMoisture] = useState([]);\r\n  const [sunlight, setSunlight] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n\r\n  const generateMinutes = () => {\r\n    const items = [];\r\n    new Array(24).fill().forEach((acc, index) => {\r\n      items.push(moment( {hour: index} ).format('h:mm A'));\r\n      items.push(moment({ hour: index, minute: 15 }).format('h:mm A'));  \r\n      items.push(moment({ hour: index, minute: 30 }).format('h:mm A'));  \r\n      items.push(moment({ hour: index, minute: 45 }).format('h:mm A'));  \r\n    })\r\n    return items;\r\n  }\r\n  \r\n  const getData = (data) => {\r\n\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    interaction: {\r\n        mode: 'index',\r\n        intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n            text: 'Moisture Level vs Sunlight Level (30 Minutes)',\r\n        },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: 'realtime',\r\n        realtime\r\n      },\r\n        y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            min: 0,\r\n            max: 100,\r\n            stepSize: 1,\r\n\r\n        },\r\n    },\r\n  };\r\n\r\n  const chartdata = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Moisture Level %',\r\n        data: [1,2,3,4,5,6,4,5],\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        yAxisID: 'y',\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n        setLabels(generateMinutes());\r\n        setLoad(true);\r\n    getData(props);\r\n}, [props])\r\n    return (\r\n      <div>\r\n      {\r\n        load ? <Line options={options} data={chartdata} /> : null\r\n      }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default LiveChart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
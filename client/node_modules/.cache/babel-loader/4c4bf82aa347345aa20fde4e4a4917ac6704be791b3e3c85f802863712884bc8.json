{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganji\\\\Desktop\\\\cs460-smart-plant-system\\\\src\\\\components\\\\Charts\\\\LiveChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { StreamingPlugin, RealTimeScale } from 'chartjs-plugin-streaming';\nimport { Chart as ChartJS\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   TimeScale,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(\n// CategoryScale,\n// LinearScale,\n// PointElement,\n// LineElement,\n// Title,\n// Tooltip,\n// Legend,\n// TimeScale,\nRealTimeScale, StreamingPlugin);\nconst LiveChart = props => {\n  _s();\n  const [data, setData] = useState([]);\n  const options = {\n    scales: {\n      x: {\n        type: 'realtime',\n        realtime: {\n          onRefresh: chart => {\n            var current = data;\n            current.push({\n              x: Date.now(),\n              y: Math.random()\n            });\n            setData(current);\n            chart.data.datasets[0].data = current;\n            console.log(data.length);\n          }\n        }\n      },\n      y: {\n        // type: 'linear',\n        // display: true,\n        // position: 'left',\n        // min: 0,\n        max: 1,\n        // stepSize: 1,\n        beginAtZero: true\n      }\n    }\n  };\n  const chartdata = {\n    datasets: [{\n      label: \"Dataset 1\",\n      data: [],\n      label: 'Moisture Level %',\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      yAxisID: 'y'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveChart, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = LiveChart;\nexport default LiveChart;\nvar _c;\n$RefreshReg$(_c, \"LiveChart\");","map":{"version":3,"names":["React","useEffect","useState","StreamingPlugin","RealTimeScale","Chart","ChartJS","Line","jsxDEV","_jsxDEV","register","LiveChart","props","_s","data","setData","options","scales","x","type","realtime","onRefresh","chart","current","push","Date","now","y","Math","random","datasets","console","log","length","max","beginAtZero","chartdata","label","borderColor","backgroundColor","yAxisID","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/components/Charts/LiveChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StreamingPlugin, RealTimeScale } from 'chartjs-plugin-streaming';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   PointElement,\r\n//   LineElement,\r\n//   Title,\r\n//   Tooltip,\r\n//   Legend,\r\n//   TimeScale,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n  // CategoryScale,\r\n  // LinearScale,\r\n  // PointElement,\r\n  // LineElement,\r\n  // Title,\r\n  // Tooltip,\r\n  // Legend,\r\n  // TimeScale,\r\n  RealTimeScale,\r\n  StreamingPlugin\r\n);\r\n\r\n\r\nconst LiveChart = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'realtime',\r\n        realtime: {\r\n          onRefresh: chart => {\r\n            var current = data;\r\n            current.push({\r\n                  x: Date.now(),\r\n                  y: Math.random()\r\n            })\r\n            setData(current)\r\n            chart.data.datasets[0].data = current;\r\n            console.log(data.length);\r\n          }\r\n        }\r\n      },\r\n      y: {\r\n        // type: 'linear',\r\n        // display: true,\r\n        // position: 'left',\r\n        // min: 0,\r\n        max: 1,\r\n        // stepSize: 1,\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartdata = {\r\n    datasets: [\r\n      {\r\n        label: \"Dataset 1\",\r\n        data: [],\r\n        label: 'Moisture Level %',\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        yAxisID: 'y',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line options={options} data={chartdata} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LiveChart"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,aAAa,QAAQ,0BAA0B;AAEzE,SACEC,KAAK,IAAIC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,OACO,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvCH,OAAO,CAACI,QAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,aAAa,EACbD,eAAe,CAChB;AAGD,MAAMQ,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBC,QAAQ,EAAE;UACRC,SAAS,EAAEC,KAAK,IAAI;YAClB,IAAIC,OAAO,GAAGT,IAAI;YAClBS,OAAO,CAACC,IAAI,CAAC;cACPN,CAAC,EAAEO,IAAI,CAACC,GAAG,EAAE;cACbC,CAAC,EAAEC,IAAI,CAACC,MAAM;YACpB,CAAC,CAAC;YACFd,OAAO,CAACQ,OAAO,CAAC;YAChBD,KAAK,CAACR,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAAChB,IAAI,GAAGS,OAAO;YACrCQ,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACmB,MAAM,CAAC;UAC1B;QACF;MACF,CAAC;MACDN,CAAC,EAAE;QACD;QACA;QACA;QACA;QACAO,GAAG,EAAE,CAAC;QACN;QACAC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBN,QAAQ,EAAE,CACR;MACEO,KAAK,EAAE,WAAW;MAClBvB,IAAI,EAAE,EAAE;MACRuB,KAAK,EAAE,kBAAkB;MACzBC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,oBACE/B,OAAA;IAAAgC,QAAA,eACEhC,OAAA,CAACF,IAAI;MAACS,OAAO,EAAEA,OAAQ;MAACF,IAAI,EAAEsB;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;AAEV,CAAC;AAAAhC,EAAA,CAlDKF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAoDf,eAAeA,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
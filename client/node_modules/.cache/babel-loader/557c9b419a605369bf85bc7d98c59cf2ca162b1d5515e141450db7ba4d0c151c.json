{"ast":null,"code":"// operational ranges\nconst sunlight_analog_min = 255; // 255 is room light\nconst sunlight_analog_max = 6; // 6 is direct sunlight\nconst moisture_analog_dry = 230; // 230 is 100% dry\nconst moisture_analog_wet = 190; // 200 is 100% wet\nconst reservour_analog_full = 120; // 120 is 100% full\nconst reservour_analog_empty = 0; // 0 is 100% empty\n\nexport function SunlightFormat(input) {\n  // to prevent rogue readings\n  if (input < 6) {\n    input = 6;\n  }\n  var output = Math.abs(input - sunlight_analog_min) / (sunlight_analog_min - sunlight_analog_max);\n  if (output > 1) {\n    output = 1;\n  }\n  return (output * 100).toFixed(0);\n}\n_c = SunlightFormat;\nexport function MoistureFormat(input) {\n  // to prevent rogue readings\n  if (input < 190) {\n    input = 233;\n  }\n  var output = Math.abs(input - moisture_analog_dry) / (moisture_analog_dry - moisture_analog_wet);\n  if (output > 1) {\n    output = 1;\n  }\n  return (output * 100).toFixed(0);\n}\n// 120 is 100% full and 0 is 100% empty\n_c2 = MoistureFormat;\nexport function ReservoirFormat(input) {\n  return ((input - reservour_analog_empty) / reservour_analog_full * 100).toFixed(0);\n}\n_c3 = ReservoirFormat;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SunlightFormat\");\n$RefreshReg$(_c2, \"MoistureFormat\");\n$RefreshReg$(_c3, \"ReservoirFormat\");","map":{"version":3,"names":["sunlight_analog_min","sunlight_analog_max","moisture_analog_dry","moisture_analog_wet","reservour_analog_full","reservour_analog_empty","SunlightFormat","input","output","Math","abs","toFixed","_c","MoistureFormat","_c2","ReservoirFormat","_c3","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/Constants.js"],"sourcesContent":["// operational ranges\r\nconst sunlight_analog_min = 255 // 255 is room light\r\nconst sunlight_analog_max = 6 // 6 is direct sunlight\r\nconst moisture_analog_dry = 230 // 230 is 100% dry\r\nconst moisture_analog_wet = 190 // 200 is 100% wet\r\nconst reservour_analog_full = 120 // 120 is 100% full\r\nconst reservour_analog_empty = 0 // 0 is 100% empty\r\n\r\nexport function SunlightFormat(input) {\r\n\r\n    // to prevent rogue readings\r\n    if (input < 6) {\r\n        input = 6\r\n    }\r\n\r\n    var output = (Math.abs(input - sunlight_analog_min)) / (sunlight_analog_min-sunlight_analog_max)\r\n    if (output > 1) {\r\n        output = 1\r\n    }\r\n    return (output * 100).toFixed(0);\r\n}\r\n\r\nexport function MoistureFormat(input) {\r\n    // to prevent rogue readings\r\n    if (input < 190) {\r\n        input = 233\r\n    }\r\n    var output = (Math.abs(input - moisture_analog_dry)) / (moisture_analog_dry-moisture_analog_wet)\r\n    if (output > 1) {\r\n        output = 1\r\n    }\r\n    return (output * 100).toFixed(0);\r\n}\r\n// 120 is 100% full and 0 is 100% empty\r\nexport function ReservoirFormat(input) {\r\n    return (((input-reservour_analog_empty)/reservour_analog_full) * 100).toFixed(0);\r\n}\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,mBAAmB,GAAG,CAAC,EAAC;AAC9B,MAAMC,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,mBAAmB,GAAG,GAAG,EAAC;AAChC,MAAMC,qBAAqB,GAAG,GAAG,EAAC;AAClC,MAAMC,sBAAsB,GAAG,CAAC,EAAC;;AAEjC,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAElC;EACA,IAAIA,KAAK,GAAG,CAAC,EAAE;IACXA,KAAK,GAAG,CAAC;EACb;EAEA,IAAIC,MAAM,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGP,mBAAmB,CAAC,IAAKA,mBAAmB,GAACC,mBAAmB,CAAC;EAChG,IAAIO,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AAACC,EAAA,GAZeN,cAAc;AAc9B,OAAO,SAASO,cAAcA,CAACN,KAAK,EAAE;EAClC;EACA,IAAIA,KAAK,GAAG,GAAG,EAAE;IACbA,KAAK,GAAG,GAAG;EACf;EACA,IAAIC,MAAM,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGL,mBAAmB,CAAC,IAAKA,mBAAmB,GAACC,mBAAmB,CAAC;EAChG,IAAIK,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAO,CAACA,MAAM,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;AACpC;AACA;AAAAG,GAAA,GAXgBD,cAAc;AAY9B,OAAO,SAASE,eAAeA,CAACR,KAAK,EAAE;EACnC,OAAO,CAAE,CAACA,KAAK,GAACF,sBAAsB,IAAED,qBAAqB,GAAI,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAC;AACpF;AAACK,GAAA,GAFeD,eAAe;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
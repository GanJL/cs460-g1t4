{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganji\\\\Desktop\\\\cs460-smart-plant-system\\\\src\\\\components\\\\LiveData.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport '../App.css';\nimport { SunlightFormat, MoistureFormat, live_data_url } from '../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveData = _ref => {\n  _s();\n  let {\n    getReservoir\n  } = _ref;\n  const [data, setData] = useState({\n    temperature: 0.0,\n    humidity: 0.0,\n    timestamp: new Date().getTime(),\n    moisture: 0.0,\n    sunlight: 0.0,\n    reservoir: 0.0\n  });\n  useEffect(() => {\n    // establish connection with server\n    const socket = io(live_data_url, {\n      transports: [\"websocket\"],\n      cors: {\n        origin: \"http://localhost:3000/\"\n      }\n    });\n    socket.on(\"connect\", data => {\n      console.log(data);\n    });\n    socket.on(\"disconnect\", data => {\n      console.log(data);\n    });\n\n    // set interval to 3s to allow sensors time to update\n    setInterval(() => {\n      socket.emit(\"live_data\", new Date());\n    }, 3000);\n    socket.on(\"live_data\", data => {\n      var getData = JSON.parse(data.data);\n      console.log(getData);\n      getReservoir(getData.reservoir);\n      setData({\n        temperature: getData.temperature,\n        humidity: getData.humidity,\n        moisture: getData.moisture,\n        sunlight: getData.sunlight,\n        reservoir: getData.reservoir,\n        timestamp: getData.time\n      });\n    });\n    return function cleanup() {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ERROR \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Could not connect to server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionTitleBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sectionTitle\",\n          children: \"Live Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"liveDataContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liveDataBox moisture\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"liveDataLabel\",\n            children: \"Moisture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liveDataReading\",\n            children: [MoistureFormat(data.moisture), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suffix\",\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 94\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liveDataBox sunlight\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"liveDataLabel\",\n            children: \"Sunlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liveDataReading\",\n            children: [SunlightFormat(data.sunlight), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suffix\",\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 94\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liveDataBox temperature\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"liveDataLabel\",\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liveDataReading\",\n            children: [data.temperature, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suffix\",\n              children: \"\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liveDataBox humidity\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"liveDataLabel\",\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liveDataReading\",\n            children: [data.humidity, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suffix\",\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: [\"Last updated: \", data.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(LiveData, \"JJcUyT6hRYb8xrVbdgsHQ0EYHPU=\");\n_c = LiveData;\nexport default LiveData;\nvar _c;\n$RefreshReg$(_c, \"LiveData\");","map":{"version":3,"names":["React","useEffect","useState","io","SunlightFormat","MoistureFormat","live_data_url","jsxDEV","_jsxDEV","LiveData","_ref","_s","getReservoir","data","setData","temperature","humidity","timestamp","Date","getTime","moisture","sunlight","reservoir","socket","transports","cors","origin","on","console","log","setInterval","emit","getData","JSON","parse","time","cleanup","disconnect","children","error","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/components/LiveData.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { io } from \"socket.io-client\";\r\nimport '../App.css';\r\nimport {\r\n    SunlightFormat,\r\n    MoistureFormat,\r\n    live_data_url\r\n} from '../Constants';\r\n\r\nconst LiveData = ({ getReservoir }) => {\r\n\r\n    const [data, setData] = useState({\r\n        temperature: 0.0,\r\n        humidity: 0.0,\r\n        timestamp: new Date().getTime(),\r\n        moisture: 0.0,\r\n        sunlight: 0.0,\r\n        reservoir: 0.0\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        // establish connection with server\r\n        const socket = io(live_data_url, {\r\n            transports: [\"websocket\"],\r\n            cors: {\r\n                origin: \"http://localhost:3000/\",\r\n            },\r\n        });\r\n\r\n        socket.on(\"connect\", (data) => {\r\n            console.log(data);\r\n        });\r\n\r\n        socket.on(\"disconnect\", (data) => {\r\n            console.log(data);\r\n        });\r\n\r\n        // set interval to 3s to allow sensors time to update\r\n        setInterval(() => {\r\n            socket.emit(\"live_data\", new Date())\r\n        }, 3000);\r\n\r\n        socket.on(\"live_data\", (data) => {\r\n            var getData = JSON.parse(data.data);\r\n            console.log(getData)\r\n            getReservoir(getData.reservoir)\r\n            setData({\r\n                temperature: getData.temperature,\r\n                humidity: getData.humidity,\r\n                moisture: getData.moisture,\r\n                sunlight: getData.sunlight,\r\n                reservoir: getData.reservoir,\r\n                timestamp: getData.time\r\n\r\n            });\r\n        });\r\n\r\n        return function cleanup() {\r\n            socket.disconnect();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {error ? <div >\r\n                <h3>ERROR &rarr;</h3>\r\n                <div>Could not connect to server</div>\r\n            </div> :\r\n                <div>\r\n                    <div className='sectionTitleBox'>\r\n                        <div className='sectionTitle'>\r\n                            Live Data\r\n                        </div>\r\n                    </div>\r\n                    <div className='liveDataContainer'>\r\n                        <div className='liveDataBox moisture'>\r\n                            <h3 className='liveDataLabel'>Moisture</h3>\r\n                            <div className='liveDataReading'>{MoistureFormat(data.moisture)} <span className='suffix'>%</span></div>\r\n                        </div>\r\n                        <div className='liveDataBox sunlight'>\r\n                            <h3 className='liveDataLabel'>Sunlight</h3>\r\n                            <div className='liveDataReading'>{SunlightFormat(data.sunlight)} <span className='suffix'>%</span></div>\r\n                        </div>\r\n                        <div className='liveDataBox temperature'>\r\n                            <h3 className='liveDataLabel'>Temperature</h3>\r\n                            <div className='liveDataReading'>{data.temperature} <span className='suffix'>°C</span></div>\r\n                        </div>\r\n                        <div className='liveDataBox humidity'>\r\n                            <h3 className='liveDataLabel'>Humidity</h3>\r\n                            <div className='liveDataReading'>{data.humidity} <span className='suffix'>%</span></div>\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <span className='timestamp'>Last updated: {data.timestamp}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiveData"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,YAAY;AACnB,SACIC,cAAc,EACdC,cAAc,EACdC,aAAa,QACV,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAE9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC7Ba,WAAW,EAAE,GAAG;IAChBC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IAC/BC,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE;EACf,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMsB,MAAM,GAAGpB,EAAE,CAACG,aAAa,EAAE;MAC7BkB,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,IAAI,EAAE;QACFC,MAAM,EAAE;MACZ;IACJ,CAAC,CAAC;IAEFH,MAAM,CAACI,EAAE,CAAC,SAAS,EAAGd,IAAI,IAAK;MAC3Be,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;IACrB,CAAC,CAAC;IAEFU,MAAM,CAACI,EAAE,CAAC,YAAY,EAAGd,IAAI,IAAK;MAC9Be,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;IACrB,CAAC,CAAC;;IAEF;IACAiB,WAAW,CAAC,MAAM;MACdP,MAAM,CAACQ,IAAI,CAAC,WAAW,EAAE,IAAIb,IAAI,EAAE,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;IAERK,MAAM,CAACI,EAAE,CAAC,WAAW,EAAGd,IAAI,IAAK;MAC7B,IAAImB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACrB,IAAI,CAACA,IAAI,CAAC;MACnCe,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;MACpBpB,YAAY,CAACoB,OAAO,CAACV,SAAS,CAAC;MAC/BR,OAAO,CAAC;QACJC,WAAW,EAAEiB,OAAO,CAACjB,WAAW;QAChCC,QAAQ,EAAEgB,OAAO,CAAChB,QAAQ;QAC1BI,QAAQ,EAAEY,OAAO,CAACZ,QAAQ;QAC1BC,QAAQ,EAAEW,OAAO,CAACX,QAAQ;QAC1BC,SAAS,EAAEU,OAAO,CAACV,SAAS;QAC5BL,SAAS,EAAEe,OAAO,CAACG;MAEvB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAO,SAASC,OAAOA,CAAA,EAAG;MACtBb,MAAM,CAACc,UAAU,EAAE;IACvB,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI7B,OAAA;IAAA8B,QAAA,EACKC,KAAK,gBAAG/B,OAAA;MAAA8B,QAAA,gBACL9B,OAAA;QAAA8B,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACrBnC,OAAA;QAAA8B,QAAA,EAAK;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,gBACFnC,OAAA;MAAA8B,QAAA,gBACI9B,OAAA;QAAKoC,SAAS,EAAC,iBAAiB;QAAAN,QAAA,eAC5B9B,OAAA;UAAKoC,SAAS,EAAC,cAAc;UAAAN,QAAA,EAAC;QAE9B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACNnC,OAAA;QAAKoC,SAAS,EAAC,mBAAmB;QAAAN,QAAA,gBAC9B9B,OAAA;UAAKoC,SAAS,EAAC,sBAAsB;UAAAN,QAAA,gBACjC9B,OAAA;YAAIoC,SAAS,EAAC,eAAe;YAAAN,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3CnC,OAAA;YAAKoC,SAAS,EAAC,iBAAiB;YAAAN,QAAA,GAAEjC,cAAc,CAACQ,IAAI,CAACO,QAAQ,CAAC,EAAC,GAAC,eAAAZ,OAAA;cAAMoC,SAAS,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtG,eACNnC,OAAA;UAAKoC,SAAS,EAAC,sBAAsB;UAAAN,QAAA,gBACjC9B,OAAA;YAAIoC,SAAS,EAAC,eAAe;YAAAN,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3CnC,OAAA;YAAKoC,SAAS,EAAC,iBAAiB;YAAAN,QAAA,GAAElC,cAAc,CAACS,IAAI,CAACQ,QAAQ,CAAC,EAAC,GAAC,eAAAb,OAAA;cAAMoC,SAAS,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtG,eACNnC,OAAA;UAAKoC,SAAS,EAAC,yBAAyB;UAAAN,QAAA,gBACpC9B,OAAA;YAAIoC,SAAS,EAAC,eAAe;YAAAN,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC9CnC,OAAA;YAAKoC,SAAS,EAAC,iBAAiB;YAAAN,QAAA,GAAEzB,IAAI,CAACE,WAAW,EAAC,GAAC,eAAAP,OAAA;cAAMoC,SAAS,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC1F,eACNnC,OAAA;UAAKoC,SAAS,EAAC,sBAAsB;UAAAN,QAAA,gBACjC9B,OAAA;YAAIoC,SAAS,EAAC,eAAe;YAAAN,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3CnC,OAAA;YAAKoC,SAAS,EAAC,iBAAiB;YAAAN,QAAA,GAAEzB,IAAI,CAACG,QAAQ,EAAC,GAAC,eAAAR,OAAA;cAAMoC,SAAS,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACNnC,OAAA;QAAA8B,QAAA,eACI9B,OAAA;UAAMoC,SAAS,EAAC,WAAW;UAAAN,QAAA,GAAC,gBAAc,EAACzB,IAAI,CAACI,SAAS;QAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGR;AAEd,CAAC;AAAAhC,EAAA,CA7FKF,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA+Fd,eAAeA,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
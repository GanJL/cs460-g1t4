{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganji\\\\Desktop\\\\cs460-smart-plant-system\\\\src\\\\components\\\\Charts\\\\LiveChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment/moment';\nimport 'chartjs-adapter-date-fns';\nimport ChartStreaming from 'chartjs-plugin-streaming';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ChartStreaming);\nconst LiveChart = props => {\n  _s();\n  const [labels, setLabels] = useState([]);\n  const [moisture, setMoisture] = useState([]);\n  const [sunlight, setSunlight] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [data, setData] = useState([]);\n  const generateMinutes = () => {\n    const items = [];\n    new Array(24).fill().forEach((acc, index) => {\n      items.push(moment({\n        hour: index\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 15\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 30\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 45\n      }).format('h:mm A'));\n    });\n    return items;\n  };\n  const getData = data => {\n    // console.log(data.data.moisture);\n    // setData(data.data.moisture);\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'realtime',\n        realtime: {\n          onRefresh: chart => {\n            // chart.data.datasets.forEach(dataset => {\n            //   console.log(typeof(dataset.data));\n            //   dataset.data.push({\n            //     x: Date.now(),\n            //     y: Math.random()\n            //   });\n            //   console.log(dataset.data);\n            // });\n            // // test.push({\n            // //       x: Date.now(),\n            // //       y: Math.random()\n            // //     });\n            // chart.update('quiet')\n\n            var current = chart.data.datasets[0].data;\n            current.push({\n              x: Date.now(),\n              y: Math.random()\n            });\n            chart.data.datasets[0].data = current;\n            chart.update('quiet');\n            console.log(chart.data.datasets[0].data);\n          }\n        }\n      },\n      y: {\n        // type: 'linear',\n        // display: true,\n        // position: 'left',\n        // min: 0,\n        max: 1,\n        // stepSize: 1,\n        beginAtZero: true\n      }\n    }\n  };\n  const chartdata = {\n    datasets: [{\n      data: [],\n      label: 'Moisture Level %',\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      yAxisID: 'y'\n    }]\n  };\n  useEffect(() => {\n    setLabels(generateMinutes());\n    setLoad(true);\n    getData(props);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveChart, \"mpAueqpTsKp51V2QohTrdgKNpcc=\");\n_c = LiveChart;\nexport default LiveChart;\nvar _c;\n$RefreshReg$(_c, \"LiveChart\");","map":{"version":3,"names":["React","useEffect","useState","moment","ChartStreaming","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","register","LiveChart","props","_s","labels","setLabels","moisture","setMoisture","sunlight","setSunlight","load","setLoad","data","setData","generateMinutes","items","Array","fill","forEach","acc","index","push","hour","format","minute","getData","options","scales","x","type","realtime","onRefresh","chart","current","datasets","Date","now","y","Math","random","update","console","log","max","beginAtZero","chartdata","label","borderColor","backgroundColor","yAxisID","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/components/Charts/LiveChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment/moment';\r\nimport 'chartjs-adapter-date-fns';\r\nimport ChartStreaming from 'chartjs-plugin-streaming';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n\r\n  ChartStreaming\r\n);\r\n\r\n\r\nconst LiveChart = (props) => {\r\n  const [labels, setLabels] = useState([]);\r\n  const [moisture, setMoisture] = useState([]);\r\n  const [sunlight, setSunlight] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const generateMinutes = () => {\r\n    const items = [];\r\n    new Array(24).fill().forEach((acc, index) => {\r\n      items.push(moment({ hour: index }).format('h:mm A'));\r\n      items.push(moment({ hour: index, minute: 15 }).format('h:mm A'));\r\n      items.push(moment({ hour: index, minute: 30 }).format('h:mm A'));\r\n      items.push(moment({ hour: index, minute: 45 }).format('h:mm A'));\r\n    })\r\n    return items;\r\n  }\r\n\r\n  const getData = (data) => {\r\n    // console.log(data.data.moisture);\r\n    // setData(data.data.moisture);\r\n  }\r\n\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'realtime',\r\n        realtime: {\r\n          onRefresh: chart => {\r\n            // chart.data.datasets.forEach(dataset => {\r\n            //   console.log(typeof(dataset.data));\r\n            //   dataset.data.push({\r\n            //     x: Date.now(),\r\n            //     y: Math.random()\r\n            //   });\r\n            //   console.log(dataset.data);\r\n            // });\r\n            // // test.push({\r\n            // //       x: Date.now(),\r\n            // //       y: Math.random()\r\n            // //     });\r\n            // chart.update('quiet')\r\n            \r\n            var current = chart.data.datasets[0].data;\r\n            current.push({\r\n                  x: Date.now(),\r\n                  y: Math.random()\r\n            })\r\n            chart.data.datasets[0].data = current;\r\n            chart.update('quiet')\r\n            console.log(chart.data.datasets[0].data);\r\n\r\n          }\r\n        }\r\n      },\r\n      y: {\r\n        // type: 'linear',\r\n        // display: true,\r\n        // position: 'left',\r\n        // min: 0,\r\n        max: 1,\r\n        // stepSize: 1,\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartdata = {\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        label: 'Moisture Level %',\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        yAxisID: 'y',\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    setLabels(generateMinutes());\r\n    setLoad(true);\r\n    getData(props);\r\n  }, [props])\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Line options={options} data={chartdata} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LiveChart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
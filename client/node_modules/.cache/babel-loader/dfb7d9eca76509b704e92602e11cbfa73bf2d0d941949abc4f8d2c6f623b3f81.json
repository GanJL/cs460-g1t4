{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganji\\\\Desktop\\\\cs460-smart-plant-system\\\\src\\\\components\\\\Charts\\\\MinuteChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment/moment';\nimport 'chartjs-adapter-date-fns';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { SunlightFormat, MoistureFormat, ReservoirFormat } from '../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst MinuteChart = props => {\n  _s();\n  const [labels, setLabels] = useState([]);\n  const [moisture, setMoisture] = useState([]);\n  const [sunlight, setSunlight] = useState([]);\n  const [maxY, setMaxY] = useState(0);\n  const [minY, setMinY] = useState(0);\n  const generateMinutes = () => {\n    const items = [];\n    new Array(24).fill().forEach((acc, index) => {\n      items.push(moment({\n        hour: index\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 15\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 30\n      }).format('h:mm A'));\n      items.push(moment({\n        hour: index,\n        minute: 45\n      }).format('h:mm A'));\n    });\n    return items;\n  };\n  const getData = data => {\n    const moisture = [];\n    const sunlight = [];\n    const today = moment().format('YYYY-MM-DD');\n    data.data.map(item => {\n      const date = item[0].split(\" \")[0];\n      const minute = item[0].split(\" \")[1].split(\":\")[1];\n      if (date == today && (minute == '00' || minute == '30' || minute == '15') || minute == '45') {\n        moisture.push(MoistureFormat(JSON.parse(item[1])));\n        sunlight.push(SunlightFormat(JSON.parse(item[4])));\n      }\n    });\n    setMoisture(moisture.reverse());\n    setSunlight(sunlight.reverse());\n    setMaxY(Math.floor(Math.max(...moisture, ...sunlight)));\n    setMinY(Math.floor(Math.min(...moisture, ...sunlight)));\n    console.log(minY, maxY);\n  };\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    stacked: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Moisture Level vs Sunlight Level (30 Minutes)'\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 24\n        }\n      },\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        min: -10,\n        max: 80,\n        stepSize: 5,\n        title: {\n          display: true,\n          text: 'Moisture Level %'\n        }\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        min: -10,\n        max: 80,\n        stepSize: 5,\n        grid: {\n          drawOnChartArea: false\n        },\n        title: {\n          display: true,\n          text: 'Sunlight Level'\n        }\n      }\n    }\n  };\n  const chartdata = {\n    labels,\n    datasets: [{\n      label: 'Moisture Level %',\n      data: moisture,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      yAxisID: 'y'\n    }, {\n      label: 'Sunlight Level',\n      data: sunlight,\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      yAxisID: 'y1'\n    }]\n  };\n  useEffect(() => {\n    setLabels(generateMinutes());\n    getData(props);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: chartdata\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(MinuteChart, \"+UigNqKY+xWjIgBUeePRbrkajww=\");\n_c = MinuteChart;\nexport default MinuteChart;\nvar _c;\n$RefreshReg$(_c, \"MinuteChart\");","map":{"version":3,"names":["React","useEffect","useState","moment","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","SunlightFormat","MoistureFormat","ReservoirFormat","jsxDEV","_jsxDEV","register","MinuteChart","props","_s","labels","setLabels","moisture","setMoisture","sunlight","setSunlight","maxY","setMaxY","minY","setMinY","generateMinutes","items","Array","fill","forEach","acc","index","push","hour","format","minute","getData","data","today","map","item","date","split","JSON","parse","reverse","Math","floor","max","min","console","log","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","x","ticks","autoSkip","maxTicksLimit","y","type","position","stepSize","y1","grid","drawOnChartArea","chartdata","datasets","label","borderColor","backgroundColor","yAxisID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ganji/Desktop/cs460-smart-plant-system/src/components/Charts/MinuteChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment/moment';\r\nimport 'chartjs-adapter-date-fns';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    TimeScale\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport { \r\n  SunlightFormat,\r\n  MoistureFormat,\r\n  ReservoirFormat\r\n} from '../../Constants';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n);\r\n\r\n\r\n\r\nconst MinuteChart = (props) => {\r\n  const [labels, setLabels] = useState([]);\r\n  const [moisture, setMoisture] = useState([]);\r\n  const [sunlight, setSunlight] = useState([]);\r\n  const [maxY, setMaxY] = useState(0);\r\n  const [minY, setMinY] = useState(0);\r\n\r\n  const generateMinutes = () => {\r\n    const items = [];\r\n    new Array(24).fill().forEach((acc, index) => {\r\n      items.push(moment( {hour: index} ).format('h:mm A'));\r\n      items.push(moment({ hour: index, minute: 15 }).format('h:mm A'));  \r\n      items.push(moment({ hour: index, minute: 30 }).format('h:mm A'));  \r\n      items.push(moment({ hour: index, minute: 45 }).format('h:mm A'));  \r\n    })\r\n    return items;\r\n  }\r\n  \r\n  const getData = (data) => {\r\n    const moisture = [];\r\n    const sunlight = [];\r\n    const today = moment().format('YYYY-MM-DD');\r\n    data.data.map((item) => {\r\n      const date = item[0].split(\" \")[0]\r\n      const minute = item[0].split(\" \")[1].split(\":\")[1]\r\n      if (date == today && (minute == '00' || minute == '30'|| minute == '15') || minute == '45') {\r\n        moisture.push(MoistureFormat(JSON.parse(item[1])));\r\n        sunlight.push(SunlightFormat(JSON.parse(item[4])));\r\n      }\r\n    })\r\n    setMoisture(moisture.reverse());\r\n    setSunlight(sunlight.reverse());\r\n    setMaxY(Math.floor(Math.max(...moisture, ...sunlight)));\r\n    setMinY(Math.floor(Math.min(...moisture, ...sunlight)));\r\n    console.log(minY, maxY);\r\n\r\n  }\r\n  const options = {\r\n    responsive: true,\r\n    interaction: {\r\n        mode: 'index',\r\n        intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n            text: 'Moisture Level vs Sunlight Level (30 Minutes)',\r\n        },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxTicksLimit: 24,\r\n        },\r\n      },\r\n        y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            min: -10,\r\n            max: 80,\r\n            stepSize: 5,\r\n            title: {\r\n              display: true,\r\n              text: 'Moisture Level %'\r\n            }\r\n        },\r\n        y1: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'right',\r\n            min: -10,\r\n            max: 80,\r\n            stepSize: 5,\r\n            grid: {\r\n                drawOnChartArea: false,\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Sunlight Level'\r\n            }\r\n        },\r\n    },\r\n  };\r\n\r\n  const chartdata = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Moisture Level %',\r\n        data: moisture,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        yAxisID: 'y',\r\n      },\r\n      {\r\n        label: 'Sunlight Level',\r\n        data: sunlight,\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        yAxisID: 'y1',\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    setLabels(generateMinutes());\r\n    getData(props);\r\n}, [props])\r\n    return (\r\n        <Line options={options} data={chartdata} />\r\n    )\r\n}\r\n\r\nexport default MinuteChart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}